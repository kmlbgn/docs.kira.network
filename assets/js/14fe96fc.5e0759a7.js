"use strict";(self.webpackChunkkira_documentation=self.webpackChunkkira_documentation||[]).push([[4475],{8422:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>p,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var i=t(5893),o=t(1151);t(4866),t(5162);const r={title:"Endpoints",sidebar_position:3,slug:"/27ca73f9-ea33-4ca3-994a-cba651a2c896"},s=void 0,a={id:"Stack/INTERX--Middleware/Endpoints",title:"Endpoints",description:"Description of all available endpoints including their accepted parameter and expected response format can be queried though :11000/api/metadata endpoint.",source:"@site/tabs/Docs/Stack/INTERX--Middleware/Endpoints.mdx",sourceDirName:"Stack/INTERX--Middleware",slug:"/27ca73f9-ea33-4ca3-994a-cba651a2c896",permalink:"/docs.kira.network/27ca73f9-ea33-4ca3-994a-cba651a2c896",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Endpoints",sidebar_position:3,slug:"/27ca73f9-ea33-4ca3-994a-cba651a2c896"},sidebar:"defaultSidebar",previous:{title:"System Requirements",permalink:"/docs.kira.network/c65ccc87-599b-4ae3-9e7d-dfb95129fb77"},next:{title:"Installation",permalink:"/docs.kira.network/cf419aea-20dc-4421-951b-2579c3026e6b"}},p={},d=[];function c(n){const e={code:"code",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(e.p,{children:["Description of all available endpoints including their accepted parameter and expected response format can be queried though ",(0,i.jsx)(e.code,{children:"<IP>:11000/api/metadata"})," endpoint."]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Example Metadata Endpoint Response"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-json",children:'{\n  "functions": {\n    "Broadcast": {\n      "endpoint": "/api/kira/txs",\n      "description": "Broadcast is a function to broadcast signed transaction.",\n      "parameters": {\n        "mode": {\n          "type": "string",\n          "optional": true,\n          "description": "This represents the broadcast mode. (block, sync, async)"\n        },\n        "tx": {\n          "type": "byte[]",\n          "description": "This represents the transaction bytes."\n        }\n      },\n      "response": null\n    },\n    "Download": {\n      "endpoint": "/download",\n      "description": "Download is a function to download a data reference or arbitrary data.",\n      "parameters": {\n        "key": {\n          "type": "string",\n          "description": "This represents the reference key. (It saves reference data with hashed name. e.g. 2CEE6B1689EDDDD6F08EB1EAEC7D3C4E.)"\n        },\n        "module": {\n          "type": "string",\n          "description": "This represents the module name. (e.g. DRR for data reference registry.)"\n        }\n      },\n      "response": null\n    },\n    "Faucet": {\n      "endpoint": "/api/kira/faucet?",\n      "description": "Faucet is a function to claim tokens to the account for free.",\n      "parameters": {\n        "claim": {\n          "type": "string",\n          "optional": true,\n          "description": "This represents the kira account address."\n        },\n        "token": {\n          "type": "string",\n          "optional": true,\n          "description": "This represents the token name."\n        }\n      },\n      "response": {\n        "hash": {\n          "description": "The faucet transaction hash"\n        }\n      }\n    },\n    "FaucetInfo": {\n      "endpoint": "/api/kira/faucet",\n      "description": "FaucetInfo is a function to return the available faucet amount",\n      "parameters": null,\n      "response": {\n        "address": {\n          "description": "The faucet kira address"\n        },\n        "balances": {\n          "description": "The balances array (amount \\u0026 denom)"\n        }\n      }\n    },\n    "QueryAccount": {\n      "endpoint": "/api/kira/accounts/{address}",\n      "description": "QueryAccount is a function to query the account info.",\n      "parameters": {\n        "address": {\n          "type": "string",\n          "description": "This represents the account address."\n        }\n      },\n      "response": {\n        "account": {\n          "description": "The account info with address, pubkey and sequence."\n        }\n      }\n    },\n    "QueryAllIdentityRecordVerifyRequests": {\n      "endpoint": "/api/kira/gov/all_identity_verify_requests",\n      "description": "QueryAllIdentityRecordVerifyRequests is a function to query all identity record verify requests.",\n      "parameters": {\n        "countTotal": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option for pagination. count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."\n        },\n        "key": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option for pagination. key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set."\n        },\n        "limit": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option for pagination. limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."\n        },\n        "offset": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option for pagination. offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."\n        }\n      },\n      "response": {\n        "pagination": {\n          "description": "The pagination response information like total and next_key"\n        },\n        "verify_records": {\n          "type": "array",\n          "description": "The identity record verify request info",\n          "fields": {\n            "address": {\n              "type": "string",\n              "description": "The request address of identity record"\n            },\n            "id": {\n              "type": "number",\n              "description": "The verify request id"\n            },\n            "lastRecordEditDate": {\n              "type": "string",\n              "description": "The latest edit timestamp"\n            },\n            "recordIds": {\n              "type": "array\\u003cnumber\\u003e",\n              "description": "The array of identity record id"\n            },\n            "tip": {\n              "type": "Coin",\n              "description": "The tip amount for verification",\n              "fields": {\n                "amount": {\n                  "type": "string",\n                  "description": ""\n                },\n                "denom": {\n                  "type": "string",\n                  "description": ""\n                }\n              }\n            },\n            "verifier": {\n              "type": "string",\n              "description": "The verifier address of identity record"\n            }\n          }\n        }\n      }\n    },\n    "QueryAllIdentityRecords": {\n      "endpoint": "/api/kira/gov/all_identity_records",\n      "description": "QueryAllIdentityRecords is a function to query all identity records.",\n      "parameters": {\n        "countTotal": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option for pagination. count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."\n        },\n        "key": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option for pagination. key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set."\n        },\n        "limit": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option for pagination. limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."\n        },\n        "offset": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option for pagination. offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."\n        }\n      },\n      "response": {\n        "pagination": {\n          "description": "The pagination response information like total and next_key"\n        },\n        "records": {\n          "type": "array",\n          "description": "The identity records info",\n          "fields": {\n            "address": {\n              "type": "string",\n              "description": "The address of identity record"\n            },\n            "date": {\n              "type": "string",\n              "description": "The identity record timestamp"\n            },\n            "id": {\n              "type": "number",\n              "description": "The identity record id"\n            },\n            "key": {\n              "type": "string",\n              "description": "The identity record key"\n            },\n            "value": {\n              "type": "string",\n              "description": "The identity record value"\n            },\n            "verifiers": {\n              "type": "array\\u003cstring\\u003e",\n              "description": "The address list of verifiers"\n            }\n          }\n        }\n      }\n    },\n    "QueryBalance": {\n      "endpoint": "/api/kira/balances/{address}",\n      "description": "QueryBalance is a function to query the account balances.",\n      "parameters": {\n        "address": {\n          "type": "string",\n          "description": "This represents the account address."\n        },\n        "count_total": {\n          "type": "number",\n          "optional": true,\n          "description": "This represents the option to return total count of data reference keys."\n        },\n        "limit": {\n          "type": "number",\n          "description": "This represents the page size"\n        },\n        "offset": {\n          "type": "number",\n          "description": "This represents the page number"\n        }\n      },\n      "response": {\n        "balances": {\n          "type": "Coin[]",\n          "description": "The account balances with pagination"\n        },\n        "pagination": {\n          "description": "The pagination response information like total and next_key"\n        }\n      }\n    },\n    "QueryBlockByHeightOrHash": {\n      "endpoint": "/api/blocks/{height}",\n      "description": "QueryBlockByHeightOrHash is a function to query block by height or hash.",\n      "parameters": {\n        "height": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option of block height or hash."\n        }\n      },\n      "response": {\n        "block": {\n          "description": "The block information"\n        },\n        "block_id": {\n          "description": "The block hash inforamtion"\n        }\n      }\n    },\n    "QueryBlockTransactions": {\n      "endpoint": "/api/blocks/{height}/transactions",\n      "description": "QueryBlockTransactions is a function to query block transactions by height.",\n      "parameters": {\n        "height": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option of block height."\n        }\n      },\n      "response": {\n        "total_count": {\n          "description": "The total transaction count"\n        },\n        "txs": {\n          "description": "The transaction information array"\n        }\n      }\n    },\n    "QueryBlocks": {\n      "endpoint": "/api/blocks",\n      "description": "QueryBlocks is a function to query blocks with pagination.",\n      "parameters": {\n        "maxHeight": {\n          "type": "string",\n          "optional": true,\n          "description": "This is the option of the maximum block height."\n        },\n        "minHeight": {\n          "type": "string",\n          "optional": true,\n          "description": "This is the option of the minimum block height."\n        }\n      },\n      "response": {\n        "block_metas": {\n          "description": "The array of block informations"\n        },\n        "last_height": {\n          "description": "The last block height"\n        }\n      }\n    },\n    "QueryConsensus": {\n      "endpoint": "/api/consensus",\n      "description": "QueryConsensus is a function to query consensus info.",\n      "parameters": null,\n      "response": {\n        "average_block_time": {\n          "description": "average block time in seconds"\n        },\n        "commit_time": {\n          "description": "The latest commit timestamp"\n        },\n        "consensus_stopped": {\n          "description": "If the consensus is stopped or not"\n        },\n        "height": {\n          "description": "The latest block height"\n        },\n        "noncommits": {\n          "description": "The validators array with no commits"\n        },\n        "precommits": {\n          "description": "The validators array with pre commits"\n        },\n        "prevotes": {\n          "description": "The validators array with prevotes"\n        },\n        "proposer": {\n          "description": "The current proposer kira address"\n        },\n        "round": {\n          "description": "The consensus round"\n        },\n        "start_time": {\n          "description": "The consensus start timestamp"\n        },\n        "step": {\n          "description": "RoundStepNewHeight"\n        },\n        "triggered_timeout_precommit": {\n          "description": "true or false"\n        }\n      }\n    },\n    "QueryDashboard": {\n      "endpoint": "/api/dashboard",\n      "description": "QueryDashboard is a function to query data for the dashboard.",\n      "parameters": null,\n      "response": {\n        "blocks": {\n          "type": "struct",\n          "description": "The blocks consensus status",\n          "fields": {\n            "average_time": {\n              "type": "number",\n              "description": "The average block confirm time"\n            },\n            "current_height": {\n              "type": "number",\n              "description": "The current block height"\n            },\n            "current_transactions": {\n              "type": "number",\n              "description": "The count of current transactions"\n            },\n            "latest_time": {\n              "type": "number",\n              "description": "The latest block confirm time"\n            },\n            "pending_transactions": {\n              "type": "number",\n              "description": "The count of pending transactions"\n            },\n            "since_genesis": {\n              "type": "number",\n              "description": "The block count after genesis block"\n            }\n          }\n        },\n        "consensus_health": {\n          "description": "Float value between 0 and 1, represents the health status of the consensus."\n        },\n        "current_block_validator": {\n          "type": "struct",\n          "description": "The current block validator info",\n          "fields": {\n            "address": {\n              "type": "string",\n              "description": "The validator\'s address"\n            },\n            "moniker": {\n              "type": "string",\n              "description": "The validator\'s moniker"\n            }\n          }\n        },\n        "proposals": {\n          "type": "struct",\n          "description": "The proposals count info",\n          "fields": {\n            "active": {\n              "type": "number",\n              "description": "The count of active proposals"\n            },\n            "enacting": {\n              "type": "number",\n              "description": "The count of enacting proposals"\n            },\n            "finished": {\n              "type": "number",\n              "description": "The count of finished proposals"\n            },\n            "proposers": {\n              "type": "number",\n              "description": "The count of proposers"\n            },\n            "successful": {\n              "type": "number",\n              "description": "The count of successful proposals"\n            },\n            "total": {\n              "type": "number",\n              "description": "The count of total proposals"\n            },\n            "voters": {\n              "type": "number",\n              "description": "The count of voters"\n            }\n          }\n        },\n        "validators": {\n          "type": "struct",\n          "description": "The validators count info",\n          "fields": {\n            "active": {\n              "type": "number",\n              "description": "The count of active validators"\n            },\n            "inactive": {\n              "type": "number",\n              "description": "The count of in-active validators"\n            },\n            "jailed": {\n              "type": "number",\n              "description": "The count of jailed validators"\n            },\n            "paused": {\n              "type": "number",\n              "description": "The count of paused validators"\n            },\n            "total": {\n              "type": "number",\n              "description": "The count of total validators"\n            },\n            "waiting": {\n              "type": "number",\n              "description": "The count of waiting validators"\n            }\n          }\n        }\n      }\n    },\n    "QueryDataReference": {\n      "endpoint": "/api/kira/gov/data/{key}",\n      "description": "QueryDataReference is a function to query data reference by a key.",\n      "parameters": {\n        "key": {\n          "type": "string",\n          "description": "This represents data reference key."\n        }\n      },\n      "response": null\n    },\n    "QueryDataReferenceKeys": {\n      "endpoint": "/api/kira/gov/data_keys",\n      "description": "QueryDataReferenceKeys is a function to query data reference keys with pagination.",\n      "parameters": {\n        "count_total": {\n          "type": "number",\n          "optional": true,\n          "description": "This represents the option to return total count of data reference keys."\n        },\n        "limit": {\n          "type": "number",\n          "description": "This represents the page size"\n        },\n        "offset": {\n          "type": "number",\n          "description": "This represents the page number"\n        }\n      },\n      "response": null\n    },\n    "QueryExecutionFee": {\n      "endpoint": "/api/kira/gov/execution_fee",\n      "description": "QueryExecutionFee is a function to query execution fee by transaction type.",\n      "parameters": {\n        "message": {\n          "type": "string",\n          "description": "This is an option of a transaction type"\n        }\n      },\n      "response": {\n        "fee": {\n          "description": "The execution fee info"\n        }\n      }\n    },\n    "QueryExecutionFees": {\n      "endpoint": "/api/kira/gov/execution_fees",\n      "description": "QueryExecutionFees is a function to query all execution fees.",\n      "parameters": null,\n      "response": {\n        "fees": {\n          "type": "array",\n          "description": "All execution fees"\n        }\n      }\n    },\n    "QueryGenesis": {\n      "endpoint": "/api/genesis",\n      "description": "QueryGenesis is a function to query genesis.",\n      "parameters": null,\n      "response": null\n    },\n    "QueryGenesisSum": {\n      "endpoint": "/api/gensum",\n      "description": "QueryGenesisSum is a function to query genesis checksum.",\n      "parameters": null,\n      "response": null\n    },\n    "QueryIdentityRecord": {\n      "endpoint": "/api/kira/gov/identity_record/{id}",\n      "description": "QueryIdentityRecord is a function to query identity record by id.",\n      "parameters": {\n        "id": {\n          "type": "number",\n          "description": "This is the identity record id."\n        }\n      },\n      "response": {\n        "record": {\n          "description": "The identity record info",\n          "fields": {\n            "address": {\n              "type": "string",\n              "description": "The address of identity record"\n            },\n            "date": {\n              "type": "string",\n              "description": "The identity record timestamp"\n            },\n            "id": {\n              "type": "number",\n              "description": "The identity record id"\n            },\n            "key": {\n              "type": "string",\n              "description": "The identity record key"\n            },\n            "value": {\n              "type": "string",\n              "description": "The identity record value"\n            },\n            "verifiers": {\n              "type": "array\\u003cstring\\u003e",\n              "description": "The address list of verifiers"\n            }\n          }\n        }\n      }\n    },\n    "QueryIdentityRecordVerifyRequest": {\n      "endpoint": "/api/kira/gov/identity_verify_record/{request_id}",\n      "description": "QueryIdentityRecordVerifyRequest is a function to query identity record verify request.",\n      "parameters": {\n        "request_id": {\n          "type": "number",\n          "description": "This is the identity record verify request id."\n        }\n      },\n      "response": {\n        "verify_record": {\n          "description": "The identity record verify request info",\n          "fields": {\n            "address": {\n              "type": "string",\n              "description": "The request address of identity record"\n            },\n            "id": {\n              "type": "number",\n              "description": "The verify request id"\n            },\n            "lastRecordEditDate": {\n              "type": "string",\n              "description": "The latest edit timestamp"\n            },\n            "recordIds": {\n              "type": "array\\u003cnumber\\u003e",\n              "description": "The array of identity record id"\n            },\n            "tip": {\n              "type": "Coin",\n              "description": "The tip amount for verification",\n              "fields": {\n                "amount": {\n                  "type": "string",\n                  "description": ""\n                },\n                "denom": {\n                  "type": "string",\n                  "description": ""\n                }\n              }\n            },\n            "verifier": {\n              "type": "string",\n              "description": "The verifier address of identity record"\n            }\n          }\n        }\n      }\n    },\n    "QueryIdentityRecordVerifyRequestsByApprover": {\n      "endpoint": "/api/kira/gov/identity_verify_requests_by_approver/{approver}",\n      "description": "QueryIdentityRecordVerifyRequestsByApprover is a function to query identity record verify request by approver.",\n      "parameters": {\n        "countTotal": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option for pagination. count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."\n        },\n        "key": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option for pagination. key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set."\n        },\n        "limit": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option for pagination. limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."\n        },\n        "offset": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option for pagination. offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."\n        },\n        "requester": {\n          "type": "string",\n          "description": "This is the identity record verify request approver address."\n        }\n      },\n      "response": {\n        "pagination": {\n          "description": "The pagination response information like total and next_key"\n        },\n        "verify_records": {\n          "type": "array",\n          "description": "The identity record verify request info",\n          "fields": {\n            "address": {\n              "type": "string",\n              "description": "The request address of identity record"\n            },\n            "id": {\n              "type": "number",\n              "description": "The verify request id"\n            },\n            "lastRecordEditDate": {\n              "type": "string",\n              "description": "The latest edit timestamp"\n            },\n            "recordIds": {\n              "type": "array\\u003cnumber\\u003e",\n              "description": "The array of identity record id"\n            },\n            "tip": {\n              "type": "Coin",\n              "description": "The tip amount for verification",\n              "fields": {\n                "amount": {\n                  "type": "string",\n                  "description": ""\n                },\n                "denom": {\n                  "type": "string",\n                  "description": ""\n                }\n              }\n            },\n            "verifier": {\n              "type": "string",\n              "description": "The verifier address of identity record"\n            }\n          }\n        }\n      }\n    },\n    "QueryIdentityRecordVerifyRequestsByRequester": {\n      "endpoint": "/api/kira/gov/identity_verify_requests_by_requester/{requester}",\n      "description": "QueryIdentityRecordVerifyRequestsByRequester is a function to query identity record verify request by requester.",\n      "parameters": {\n        "countTotal": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option for pagination. count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."\n        },\n        "key": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option for pagination. key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set."\n        },\n        "limit": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option for pagination. limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."\n        },\n        "offset": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option for pagination. offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."\n        },\n        "requester": {\n          "type": "string",\n          "description": "This is the identity record verify requester address."\n        }\n      },\n      "response": {\n        "pagination": {\n          "description": "The pagination response information like total and next_key"\n        },\n        "verify_records": {\n          "type": "array",\n          "description": "The identity record verify request info",\n          "fields": {\n            "address": {\n              "type": "string",\n              "description": "The request address of identity record"\n            },\n            "id": {\n              "type": "number",\n              "description": "The verify request id"\n            },\n            "lastRecordEditDate": {\n              "type": "string",\n              "description": "The latest edit timestamp"\n            },\n            "recordIds": {\n              "type": "array\\u003cnumber\\u003e",\n              "description": "The array of identity record id"\n            },\n            "tip": {\n              "type": "Coin",\n              "description": "The tip amount for verification",\n              "fields": {\n                "amount": {\n                  "type": "string",\n                  "description": ""\n                },\n                "denom": {\n                  "type": "string",\n                  "description": ""\n                }\n              }\n            },\n            "verifier": {\n              "type": "string",\n              "description": "The verifier address of identity record"\n            }\n          }\n        }\n      }\n    },\n    "QueryIdentityRecordsByAddress": {\n      "endpoint": "/api/kira/gov/identity_records/{creator}",\n      "description": "QueryIdentityRecordsByAddress is a function to query identity records by address.",\n      "parameters": {\n        "creator": {\n          "type": "string",\n          "description": "This is the identity record creator address."\n        }\n      },\n      "response": {\n        "records": {\n          "type": "array",\n          "description": "The identity records info",\n          "fields": {\n            "address": {\n              "type": "string",\n              "description": "The address of identity record"\n            },\n            "date": {\n              "type": "string",\n              "description": "The identity record timestamp"\n            },\n            "id": {\n              "type": "number",\n              "description": "The identity record id"\n            },\n            "key": {\n              "type": "string",\n              "description": "The identity record key"\n            },\n            "value": {\n              "type": "string",\n              "description": "The identity record value"\n            },\n            "verifiers": {\n              "type": "array\\u003cstring\\u003e",\n              "description": "The address list of verifiers"\n            }\n          }\n        }\n      }\n    },\n    "QueryInterxFunctions": {\n      "endpoint": "/api/metadata",\n      "description": "QueryInterxFunctions is a function to query interx functions.",\n      "parameters": null,\n      "response": null\n    },\n    "QueryInterxList": {\n      "endpoint": "/api/interx_list",\n      "description": "QueryInterxList is a function to query all interx list.",\n      "parameters": {\n        "ip_only": {\n          "type": "bool",\n          "optional": true,\n          "description": "This is an option to query only ip addresses separated by comma."\n        }\n      },\n      "response": {\n        "last_update": {\n          "type": "number",\n          "description": "The last updated timestamp"\n        },\n        "node_list": {\n          "description": "The node list array",\n          "fields": {\n            "faucet": {\n              "type": "string",\n              "description": "The faucet kira address"\n            },\n            "id": {\n              "type": "string",\n              "description": "The interx public key"\n            },\n            "ip": {\n              "type": "string",\n              "description": "The public ip address"\n            },\n            "moniker": {\n              "type": "string",\n              "description": "From interx configuration"\n            },\n            "ping": {\n              "type": "number",\n              "description": "The time duration in miliseconds to dial INTERX and verify pub_key"\n            },\n            "type": {\n              "type": "string",\n              "description": "The node type from interx configuration"\n            },\n            "version": {\n              "type": "string",\n              "description": "The interx version from interx configuration"\n            }\n          }\n        },\n        "scanning": {\n          "type": "bool",\n          "description": "If discovery is still running or not"\n        }\n      }\n    },\n    "QueryInterxStatus": {\n      "endpoint": "/api/status",\n      "description": "QueryInterxStatus is a function to query interx informations.",\n      "parameters": null,\n      "response": null\n    },\n    "QueryKiraFunctions": {\n      "endpoint": "/api/kira/metadata",\n      "description": "QueryKiraFunctions is a function to query kira functions.",\n      "parameters": null,\n      "response": null\n    },\n    "QueryKiraStatus": {\n      "endpoint": "/api/kira/status",\n      "description": "QueryKiraStatus is a function to query the node status",\n      "parameters": null,\n      "response": {\n        "node_info": {\n          "description": "The connected node information"\n        },\n        "sync_info": {\n          "description": "The sync status of connected node"\n        },\n        "validator_info": {\n          "description": "The validator information of connect node"\n        }\n      }\n    },\n    "QueryKiraTokensAliases": {\n      "endpoint": "/api/kira/tokens/aliases",\n      "description": "QueryKiraTokensAliases is a function to query all tokens aliases.",\n      "parameters": null,\n      "response": null\n    },\n    "QueryKiraTokensRates": {\n      "endpoint": "/api/kira/tokens/rates",\n      "description": "QueryKiraTokensRates is a function to query all tokens rates.",\n      "parameters": null,\n      "response": null\n    },\n    "QueryNetworkProperties": {\n      "endpoint": "/api/kira/gov/network_properties",\n      "description": "QueryNetworkProperties is a function to query network properties.",\n      "parameters": null,\n      "response": null\n    },\n    "QueryPermissionsByAddress": {\n      "endpoint": "/api/kira/gov/permissions_by_address/{val_addr}",\n      "description": "QueryPermissionsByAddress is a function to query all permissions by an address.",\n      "parameters": {\n        "val_addr": {\n          "type": "string",\n          "optional": true,\n          "description": "This represents the kira account address."\n        }\n      },\n      "response": null\n    },\n    "QueryPrivP2PList": {\n      "endpoint": "/api/priv_p2p_list",\n      "description": "QueryPrivP2PList is a function to query all private nodes list.",\n      "parameters": {\n        "connected": {\n          "type": "bool",\n          "optional": true,\n          "description": "This is an option to query only connected ips."\n        },\n        "format": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option to query nodes in a specific format. usecase: order=simple"\n        },\n        "ip_only": {\n          "type": "bool",\n          "optional": true,\n          "description": "This is an option to query only ip addresses separated by comma."\n        },\n        "order": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option to query nodes in a specific order. usecase: order=random"\n        },\n        "peers_only": {\n          "type": "bool",\n          "optional": true,\n          "description": "This is an option to query only peers separated by comma. \\u003cnode_id\\u003e@\\u003cip\\u003e:\\u003cport\\u003e"\n        }\n      },\n      "response": {\n        "last_update": {\n          "type": "number",\n          "description": "The last updated timestamp"\n        },\n        "node_list": {\n          "description": "The node list array",\n          "fields": {\n            "connected": {\n              "type": "bool",\n              "description": "If the node is connected with this node"\n            },\n            "id": {\n              "type": "string",\n              "description": "The private node id"\n            },\n            "ip": {\n              "type": "string",\n              "description": "The local ip address"\n            },\n            "peers": {\n              "type": "array\\u003cstring\\u003e",\n              "description": "The list of node ids"\n            },\n            "ping": {\n              "type": "number",\n              "description": "The time duration in miliseconds to dial p2p and verify p2p node id"\n            },\n            "port": {\n              "type": "number",\n              "description": "The p2p port number"\n            }\n          }\n        },\n        "scanning": {\n          "type": "bool",\n          "description": "If discovery is still running or not"\n        }\n      }\n    },\n    "QueryProposal": {\n      "endpoint": "/api/kira/gov/proposals/{proposal_id}",\n      "description": "QueryProposal is a function to query a proposal by a given proposal_id.",\n      "parameters": {\n        "proposal_id": {\n          "type": "number",\n          "description": "This is an option of a proposal id"\n        }\n      },\n      "response": {\n        "proposal": {\n          "description": "The proposal information"\n        }\n      }\n    },\n    "QueryProposals": {\n      "endpoint": "/api/kira/gov/proposals",\n      "description": "QueryProposals is a function to query all proposals.",\n      "parameters": {\n        "countTotal": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option to validators pagination. count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."\n        },\n        "key": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option to validators pagination. key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set."\n        },\n        "limit": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option to validators pagination. limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."\n        },\n        "offset": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option to validators pagination. offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."\n        },\n        "reverse": {\n          "type": "bool",\n          "optional": true,\n          "description": "This an option to sort proposals."\n        },\n        "voter": {\n          "type": "string",\n          "optional": true,\n          "description": "This represents the kira account address."\n        }\n      },\n      "response": {\n        "proposals": {\n          "description": "The array of proposals information"\n        }\n      }\n    },\n    "QueryPubP2PList": {\n      "endpoint": "/api/pub_p2p_list",\n      "description": "QueryPubP2PList is a function to query all public nodes list.",\n      "parameters": {\n        "connected": {\n          "type": "bool",\n          "optional": true,\n          "description": "This is an option to query only connected ips."\n        },\n        "format": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option to query nodes in a specific format. usecase: order=simple"\n        },\n        "ip_only": {\n          "type": "bool",\n          "optional": true,\n          "description": "This is an option to query only ip addresses separated by comma."\n        },\n        "order": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option to query nodes in a specific order. usecase: order=random"\n        },\n        "peers_only": {\n          "type": "bool",\n          "optional": true,\n          "description": "This is an option to query only peers separated by comma. \\u003cnode_id\\u003e@\\u003cip\\u003e:\\u003cport\\u003e"\n        }\n      },\n      "response": {\n        "last_update": {\n          "type": "number",\n          "description": "The last updated timestamp"\n        },\n        "node_list": {\n          "description": "The node list array",\n          "fields": {\n            "connected": {\n              "type": "bool",\n              "description": "If the node is connected with this node"\n            },\n            "id": {\n              "type": "string",\n              "description": "The public node id"\n            },\n            "ip": {\n              "type": "string",\n              "description": "The public ip address"\n            },\n            "peers": {\n              "type": "array\\u003cstring\\u003e",\n              "description": "The list of node ids"\n            },\n            "ping": {\n              "type": "number",\n              "description": "The time duration in miliseconds to dial p2p and verify p2p node id"\n            },\n            "port": {\n              "type": "number",\n              "description": "The p2p port number"\n            }\n          }\n        },\n        "scanning": {\n          "type": "bool",\n          "description": "If discovery is still running or not"\n        }\n      }\n    },\n    "QueryRPCMethods": {\n      "endpoint": "/api/rpc_methods",\n      "description": "QueryRPCMethods is a function to query all rpc methods available.",\n      "parameters": null,\n      "response": null\n    },\n    "QueryRoles": {\n      "endpoint": "/api/kira/gov/all_roles",\n      "description": "QueryRoles is a function to query all roles.",\n      "parameters": null,\n      "response": null\n    },\n    "QueryRolesByAddress": {\n      "endpoint": "/api/kira/gov/roles_by_address/{val_addr}",\n      "description": "QueryRolesByAddress is a function to query all roles by an address.",\n      "parameters": {\n        "val_addr": {\n          "type": "string",\n          "optional": true,\n          "description": "This represents the kira account address."\n        }\n      },\n      "response": null\n    },\n    "QuerySnapList": {\n      "endpoint": "/api/snap_list",\n      "description": "QuerySnapList is a function to query all snapshot node list.",\n      "parameters": {\n        "ip_only": {\n          "type": "bool",\n          "optional": true,\n          "description": "This is an option to query only ip addresses separated by comma."\n        }\n      },\n      "response": {\n        "last_update": {\n          "type": "number",\n          "description": "The last updated timestamp"\n        },\n        "node_list": {\n          "description": "The node list array",\n          "fields": {\n            "checksum": {\n              "type": "string",\n              "description": "The snapshot checksum (SHA256)"\n            },\n            "ip": {\n              "type": "string",\n              "description": "The public ip address"\n            },\n            "port": {\n              "type": "number",\n              "description": "The interx port number"\n            },\n            "size": {\n              "type": "number",\n              "description": "The snapshot size in bytes"\n            }\n          }\n        },\n        "scanning": {\n          "type": "bool",\n          "description": "If discovery is still running or not"\n        }\n      }\n    },\n    "QuerySpendingPoolProposals": {\n      "endpoint": "/api/kira/spending-pool-proposals",\n      "description": "QuerySpendingPoolProposals is a function to query list of all spending pool proposals.",\n      "parameters": null,\n      "response": {\n        "names": {\n          "description": "The list of all spending pool proposals"\n        }\n      }\n    },\n    "QuerySpendingPools": {\n      "endpoint": "/api/kira/spending-pools",\n      "description": "QuerySpendingPools is a function to query list of all spending pool names.",\n      "parameters": {\n        "account": {\n          "type": "string",\n          "optional": true,\n          "description": "This represents the kira account address."\n        },\n        "name": {\n          "type": "string",\n          "optional": true,\n          "description": "This represents the pool name."\n        }\n      },\n      "response": {\n        "names": {\n          "description": "The list of all spending pools"\n        }\n      }\n    },\n    "QueryTotalSupply": {\n      "endpoint": "/api/kira/supply",\n      "description": "QueryTotalSupply is a function to query total supply.",\n      "parameters": null,\n      "response": {\n        "supply": {\n          "type": "Coin[]",\n          "description": "The total supply of the network"\n        }\n      }\n    },\n    "QueryTransactionHash": {\n      "endpoint": "/api/kira/txs/{hash}",\n      "description": "QueryTransactionHash is a function to query transaction details from transaction hash.",\n      "parameters": {\n        "hash": {\n          "type": "string",\n          "description": "This represents the transaction hash. (e.g. 0x20.....)"\n        }\n      },\n      "response": {\n        "hash": {\n          "description": "The transaction hash"\n        },\n        "height": {\n          "description": "The block height of transation"\n        },\n        "tx": {\n          "description": "The base-64 encoded transaction"\n        },\n        "tx_result": {\n          "description": "The result of transaction with events, gas info, logs and error code"\n        }\n      }\n    },\n    "QueryTransactionResult": {\n      "endpoint": "/api/transactions/{txHash}",\n      "description": "QueryTransactionResult is a function to query transaction result by hash.",\n      "parameters": {\n        "txHash": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option of a transaction hash."\n        }\n      },\n      "response": {\n        "block_height": {\n          "description": "The block height"\n        },\n        "block_timestamp": {\n          "description": "The block timestamp"\n        },\n        "confirmation": {\n          "description": "The block confirmations of this transaction"\n        },\n        "fees": {\n          "description": "The transaction fee"\n        },\n        "gas_used": {\n          "description": "The gas amount used in transaction"\n        },\n        "gas_wanted": {\n          "description": "The gas limit amount for transaction"\n        },\n        "hash": {\n          "description": "The transaction hash"\n        },\n        "memo": {\n          "description": "The transaction memo"\n        },\n        "msgs": {\n          "description": "The transaction msgs"\n        },\n        "status": {\n          "description": "The transaction status"\n        }\n      }\n    },\n    "QueryTransactions": {\n      "endpoint": "/api/transactions",\n      "description": "QueryTransactions is a function to query transactions of the account filtered by various options like msg type, date, and so on.",\n      "parameters": {\n        "account": {\n          "type": "string",\n          "description": "This represents the kira account address."\n        },\n        "dateEnd": {\n          "type": "string",\n          "optional": true,\n          "description": "This represents the ending point in timestamp or date(DD/MM/YY) format."\n        },\n        "dateStart": {\n          "type": "string",\n          "optional": true,\n          "description": "This represents the starting point in timestamp or date(DD/MM/YY) format."\n        },\n        "direction": {\n          "type": "string",\n          "optional": true,\n          "description": "This represents direction of the transaction(outbound, inbound)."\n        },\n        "limit": {\n          "type": "int",\n          "optional": true,\n          "description": "This represents the limit of total results to be shown. (1 ~ 100)"\n        },\n        "offset": {\n          "type": "int",\n          "optional": true,\n          "description": "This represents the offset of the first transaction."\n        },\n        "page": {\n          "type": "int",\n          "optional": true,\n          "description": "This represents the page number of results."\n        },\n        "page_size": {\n          "type": "int",\n          "optional": true,\n          "description": "This represents the pageSize number of results. (1 ~ 100)"\n        },\n        "sort": {\n          "type": "string",\n          "optional": true,\n          "description": "This represents how the transactions should be sorted(dateASC, dateDESC)."\n        },\n        "status": {\n          "type": "string",\n          "optional": true,\n          "description": "This represents the transaction status(pending, confirmed, failed)."\n        },\n        "type": {\n          "type": "string",\n          "optional": true,\n          "description": "This represents the transaction type."\n        }\n      },\n      "response": {\n        "total_count": {\n          "description": "The total transaction count"\n        },\n        "transactions": {\n          "description": "The array of transactions"\n        }\n      }\n    },\n    "QueryUBIRecords": {\n      "endpoint": "/api/kira/ubi-records",\n      "description": "QueryUBIRecords is a function to query ubi records.",\n      "parameters": {\n        "name": {\n          "type": "string",\n          "optional": true,\n          "description": "This represents the pool name."\n        }\n      },\n      "response": {\n        "record": {\n          "optional": true,\n          "description": "ubi record"\n        },\n        "records": {\n          "optional": true,\n          "description": "All ubi records"\n        }\n      }\n    },\n    "QueryUnconfirmedTxs": {\n      "endpoint": "/api/unconfirmed_txs",\n      "description": "QueryUnconfirmedTxs is a function to query unconfirmed transactions.",\n      "parameters": {\n        "limit": {\n          "type": "int",\n          "optional": true,\n          "description": "This represents the limit of the transaction. (1 ~ 1000)"\n        }\n      },\n      "response": null\n    },\n    "QueryValidatorInfos": {\n      "endpoint": "/api/valoperinfos",\n      "description": "QueryValidatorInfos is a function to query validator infos.",\n      "parameters": {\n        "countTotal": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option to validators pagination. count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."\n        },\n        "key": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option to validators pagination. key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set."\n        },\n        "limit": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option to validators pagination. limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."\n        },\n        "offset": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option to validators pagination. offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."\n        }\n      },\n      "response": {\n        "info": {\n          "description": "The array of validators information"\n        },\n        "pagination": {\n          "description": "The pagination response information like total and next_key"\n        }\n      }\n    },\n    "QueryValidators": {\n      "endpoint": "/api/valopers",\n      "description": "QueryValidators is a function to query validators.",\n      "parameters": {\n        "address": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option to query validator by a given kira address"\n        },\n        "all": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option to query all validators."\n        },\n        "countTotal": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option to validators pagination. count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."\n        },\n        "key": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option to validators pagination. key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set."\n        },\n        "limit": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option to validators pagination. limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."\n        },\n        "moniker": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option to query validator by a given moniker"\n        },\n        "offset": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option to validators pagination. offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."\n        },\n        "proposer": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option to query validators by a given proposer address"\n        },\n        "pubkey": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option to query validator by a given pubkey"\n        },\n        "status": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option to query validators by a given status"\n        },\n        "status_only": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option to query only status of all validators."\n        },\n        "valkey": {\n          "type": "string",\n          "optional": true,\n          "description": "This is an option to query validator by a given valoper address"\n        }\n      },\n      "response": {\n        "pagination": {\n          "description": "The pagination response information like total and next_key"\n        },\n        "validators": {\n          "description": "The array of validators information"\n        }\n      }\n    },\n    "QueryVoters": {\n      "endpoint": "/api/kira/gov/voters/{proposal_id}",\n      "description": "QueryVoters is a function to query voters by a given proposal id.",\n      "parameters": {\n        "proposal_id": {\n          "type": "number",\n          "description": "This is an option of a proposal id"\n        }\n      },\n      "response": null\n    },\n    "QueryVotes": {\n      "endpoint": "/api/kira/gov/votes/{proposal_id}",\n      "description": "QueryVotes is a function to query votes by a given proposal id.",\n      "parameters": {\n        "proposal_id": {\n          "type": "number",\n          "description": "This is an option of a proposal id"\n        }\n      },\n      "response": {\n        "votes": {\n          "description": "The array of votes information"\n        }\n      }\n    }\n  },\n  "response_header": {\n    "Interx_block": {\n      "type": "number",\n      "description": "This represents the current block number."\n    },\n    "Interx_blocktime": {\n      "type": "number",\n      "description": "This represents the current block timestamp."\n    },\n    "Interx_chain_id": {\n      "type": "number",\n      "description": "This represents the current chain id."\n    },\n    "Interx_hash": {\n      "type": "string",\n      "description": "This represents the interx response hash."\n    },\n    "Interx_ref": {\n      "type": "string",\n      "description": "This represents link to download the data reference."\n    },\n    "Interx_request_hash": {\n      "type": "string",\n      "description": "This represents the hash of request parameters."\n    },\n    "Interx_signature": {\n      "type": "string",\n      "description": "This represents the interx response signature."\n    },\n    "Interx_timestamp": {\n      "type": "string",\n      "description": "This represents the current interx timestamp."\n    }\n  }\n}\n'})})]})}function u(n={}){const{wrapper:e}={...(0,o.a)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(c,{...n})}):c(n)}},5162:(n,e,t)=>{t.d(e,{Z:()=>s});t(7294);var i=t(6905);const o={tabItem:"tabItem_Ymn6"};var r=t(5893);function s(n){let{children:e,hidden:t,className:s}=n;return(0,r.jsx)("div",{role:"tabpanel",className:(0,i.Z)(o.tabItem,s),hidden:t,children:e})}},4866:(n,e,t)=>{t.d(e,{Z:()=>_});var i=t(7294),o=t(6905),r=t(2466),s=t(6550),a=t(469),p=t(1980),d=t(7392),c=t(12);function u(n){return i.Children.toArray(n).filter((n=>"\n"!==n)).map((n=>{if(!n||(0,i.isValidElement)(n)&&function(n){const{props:e}=n;return!!e&&"object"==typeof e&&"value"in e}(n))return n;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof n.type?n.type:n.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function l(n){const{values:e,children:t}=n;return(0,i.useMemo)((()=>{const n=e??function(n){return u(n).map((n=>{let{props:{value:e,label:t,attributes:i,default:o}}=n;return{value:e,label:t,attributes:i,default:o}}))}(t);return function(n){const e=(0,d.l)(n,((n,e)=>n.value===e.value));if(e.length>0)throw new Error(`Docusaurus error: Duplicate values "${e.map((n=>n.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(n),n}),[e,t])}function y(n){let{value:e,tabValues:t}=n;return t.some((n=>n.value===e))}function h(n){let{queryString:e=!1,groupId:t}=n;const o=(0,s.k6)(),r=function(n){let{queryString:e=!1,groupId:t}=n;if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:e,groupId:t});return[(0,p._X)(r),(0,i.useCallback)((n=>{if(!r)return;const e=new URLSearchParams(o.location.search);e.set(r,n),o.replace({...o.location,search:e.toString()})}),[r,o])]}function f(n){const{defaultValue:e,queryString:t=!1,groupId:o}=n,r=l(n),[s,p]=(0,i.useState)((()=>function(n){let{defaultValue:e,tabValues:t}=n;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!y({value:e,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map((n=>n.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const i=t.find((n=>n.default))??t[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:e,tabValues:r}))),[d,u]=h({queryString:t,groupId:o}),[f,m]=function(n){let{groupId:e}=n;const t=function(n){return n?`docusaurus.tab.${n}`:null}(e),[o,r]=(0,c.Nk)(t);return[o,(0,i.useCallback)((n=>{t&&r.set(n)}),[t,r])]}({groupId:o}),g=(()=>{const n=d??f;return y({value:n,tabValues:r})?n:null})();(0,a.Z)((()=>{g&&p(g)}),[g]);return{selectedValue:s,selectValue:(0,i.useCallback)((n=>{if(!y({value:n,tabValues:r}))throw new Error(`Can't select invalid tab value=${n}`);p(n),u(n),m(n)}),[u,m,r]),tabValues:r}}var m=t(2389);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=t(5893);function T(n){let{className:e,block:t,selectedValue:i,selectValue:s,tabValues:a}=n;const p=[],{blockElementScrollPositionUntilNextRender:d}=(0,r.o5)(),c=n=>{const e=n.currentTarget,t=p.indexOf(e),o=a[t].value;o!==i&&(d(e),s(o))},u=n=>{let e=null;switch(n.key){case"Enter":c(n);break;case"ArrowRight":{const t=p.indexOf(n.currentTarget)+1;e=p[t]??p[0];break}case"ArrowLeft":{const t=p.indexOf(n.currentTarget)-1;e=p[t]??p[p.length-1];break}}e?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":t},e),children:a.map((n=>{let{value:e,label:t,attributes:r}=n;return(0,b.jsx)("li",{role:"tab",tabIndex:i===e?0:-1,"aria-selected":i===e,ref:n=>p.push(n),onKeyDown:u,onClick:c,...r,className:(0,o.Z)("tabs__item",g.tabItem,r?.className,{"tabs__item--active":i===e}),children:t??e},e)}))})}function v(n){let{lazy:e,children:t,selectedValue:o}=n;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){const n=r.find((n=>n.props.value===o));return n?(0,i.cloneElement)(n,{className:"margin-top--md"}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:r.map(((n,e)=>(0,i.cloneElement)(n,{key:e,hidden:n.props.value!==o})))})}function k(n){const e=f(n);return(0,b.jsxs)("div",{className:(0,o.Z)("tabs-container",g.tabList),children:[(0,b.jsx)(T,{...n,...e}),(0,b.jsx)(v,{...n,...e})]})}function _(n){const e=(0,m.Z)();return(0,b.jsx)(k,{...n,children:u(n.children)},String(e))}},1151:(n,e,t)=>{t.d(e,{Z:()=>a,a:()=>s});var i=t(7294);const o={},r=i.createContext(o);function s(n){const e=i.useContext(r);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:s(n.components),i.createElement(r.Provider,{value:e},n.children)}}}]);